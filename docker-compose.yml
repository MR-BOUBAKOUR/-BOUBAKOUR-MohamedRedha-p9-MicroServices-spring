services:
  eurekaserver:
    build:
      context: ./eurekaserver
    container_name: eurekaserver
    ports:
      - "8070:8070"
    networks:
      - medilabosolutions-net
    #    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8070/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_PATIENTS_DATABASE}
      MYSQL_USER: ${MYSQL_PATIENTS_USER}
      MYSQL_PASSWORD: ${MYSQL_PATIENTS_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./data/mysql-init:/docker-entrypoint-initdb.d
    networks:
      - medilabosolutions-net
    #    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-gateway:
    image: postgres:15
    container_name: postgres-gateway
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_GATEWAY_DATABASE}
      POSTGRES_USER: ${POSTGRES_GATEWAY_USER}
      POSTGRES_PASSWORD: ${POSTGRES_GATEWAY_PASSWORD}
    volumes:
      - postgres-gateway-data:/var/lib/postgresql/data
      - ./data/postgres-init:/docker-entrypoint-initdb.d
    networks:
      - medilabosolutions-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_GATEWAY_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./data/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - medilabosolutions-net
    #    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  patients:
    build:
      context: ./patients
    container_name: patients
    environment:
      SPRING_DATASOURCE_URL: ${MYSQL_PATIENTS_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_PATIENTS_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PATIENTS_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${MYSQL_PATIENTS_DRIVER}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    depends_on:
      mysql:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    networks:
      - medilabosolutions-net
    #    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8100/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  notes:
    build:
      context: ./notes
    container_name: notes
    environment:
      SPRING_DATA_MONGODB_URI: ${SPRING_DATA_MONGODB_URI}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    depends_on:
      mongodb:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    networks:
      - medilabosolutions-net
    #    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  assessments:
    build:
      context: ./assessments
    container_name: assessments
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    depends_on:
      eurekaserver:
        condition: service_healthy
    networks:
      - medilabosolutions-net
    #    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  gatewayserver:
    build:
      context: ./gatewayserver
    container_name: gatewayserver
    ports:
      - "8071:8071"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      OAUTH2_GOOGLE_CLIENT_ID: ${OAUTH2_GOOGLE_CLIENT_ID}
      OAUTH2_GOOGLE_CLIENT_SECRET: ${OAUTH2_GOOGLE_CLIENT_SECRET}
      KEY_STORE_PASSWORD: ${KEY_STORE_PASSWORD}
      SPRING_R2DBC_URL: ${POSTGRES_GATEWAY_URL}
      SPRING_R2DBC_USERNAME: ${POSTGRES_GATEWAY_USER}
      SPRING_R2DBC_PASSWORD: ${POSTGRES_GATEWAY_PASSWORD}
    depends_on:
      assessments:
        condition: service_healthy
      patients:
        condition: service_healthy
      notes:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      postgres-gateway:
        condition: service_healthy
    networks:
      - medilabosolutions-net
    #    restart: unless-stopped
    healthcheck:
    # -k used to ignore SSL cert validation for self-signed certs in health check; remove in production environment
      test: ["CMD", "curl", "-k", "-f", "https://localhost:8071/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

#  front-vue:
#    build:
#      context: ./front-vue
#    container_name: front-vue
#    ports:
#      - "5173:5173"
#    volumes:
#      - ./front-vue:/app
#      - /app/node_modules
#    networks:
#      - medilabosolutions-net
##    restart: unless-stopped
#    depends_on:
#      gatewayserver:
#        condition: service_healthy

networks:
  medilabosolutions-net:
    driver: bridge

volumes:
  mysql-data:
  postgres-gateway-data:
  mongo-data: