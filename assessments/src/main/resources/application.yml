server:
  port: 8080

spring:
  application:
    name: assessments
  datasource:
    url: ${POSTGRES_ASSESSMENTS_URL}
    username: ${POSTGRES_ASSESSMENTS_USER}
    password: ${POSTGRES_ASSESSMENTS_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST}
    port: ${SPRING_RABBITMQ_PORT}
    username: ${SPRING_RABBITMQ_USERNAME}
    password: ${SPRING_RABBITMQ_PASSWORD}
  ai:
    ollama:
      base-url: ${OLLAMA_BASE_URL}
      embedding:
        model: mxbai-embed-large
      chat:
        model: llama3.2:latest
        options:
          # the precision of the response (low temp = doctor / high temp = more creative)
          temperature: 0.1
          # define the number of the tokens generated on the response
          num-predict: 300
          # define the number of the tokens for the context
          num_ctx: 2048
          # repetition allowed (the higher, the less repetition is allowed)
          repeat_penalty: 1.1
    vectorstore:
      pgvector:
        initialize-schema: true
        dimensions: 1024

management:
  # In production, limit exposure (include: "health,info")
  endpoints:
    web:
      exposure:
        include: "*"
  # De-register gracefully from Eureka
  endpoint:
    shutdown:
      access: unrestricted
  # Enabling the info endpoint
  info:
    env:
      enabled: true
  # Used to identify which metrics belong to which microservice
  metrics:
    tags:
      application: ${spring.application.name}
    # Enable histogram buckets for http.server.requests (required for histogram_quantile in Prometheus/Grafana)
    distribution:
      percentiles-histogram:
        http.server.requests: true

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
  # By default, the registration is done with the hostname
  # (no DNS mapping setup on the local system -> Using the ip address)
  instance:
    preferIpAddress: true

# For the Eureka dashboard (we will see the name of the ms instead of the id address)
# Exposed via an endpoint of the actuator (not enabled by default)
info:
  app:
    name: assessments

logging:
  level:
    com:
      MedilaboSolutions:
        assessment: INFO
  # Add trace and span IDs to logs for correlation with distributed tracing
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
